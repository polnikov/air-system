name: Release publication

on:
  push:
    branches:
      - main

jobs:
  creating-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check changes
        id: check_changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            src:
              - 'exe_packages/**'

      - name: Get App Version
        if: steps.check_changes.outputs.src == 'true'
        id: get_version
        run: |
          TAG_NAME=v$(grep -o "version = '.*'" app.py | cut -d "'" -f2)
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.TAG_TOKEN }}

      - name: Create Tag
        if: steps.get_version.outcome == 'success'
        id: create_tag
        env:
          TAG_TOKEN: ${{ secrets.TAG_TOKEN }}
        run: |
          git tag ${{ env.TAG_NAME }}
          git push --tags https://oauth2:${TAG_TOKEN}@github.com/polnikov/air-system.git

      - name: Create Release
        if: steps.create_tag.outcome == 'success'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Release ${{ env.TAG_NAME }}"
          body_path: ./release_info.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TAG_TOKEN }}

      - name: Upload Asset
        if: steps.create_release.outcome == 'success'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./exe_packages/natural-air-system_${{ env.TAG_NAME }}.exe
          asset_name: natural-air-system_${{ env.TAG_NAME }}.exe
          asset_content_type: application/x-msdownload
        env:
          GITHUB_TOKEN: ${{ secrets.TAG_TOKEN }}
